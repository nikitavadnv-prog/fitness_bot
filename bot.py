from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes
from database import init_db, add_booking, get_bookings, delete_booking, get_booking_by_datetime
from scheduler import start_scheduler
from config import TELEGRAM_TOKEN, ADMIN_CHAT_ID

init_db()

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏.\n"
        "–ö–ª–∏–µ–Ω—Ç—ã –º–æ–≥—É—Ç –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ —Ç—Ä–µ–Ω–µ—Ä–∞."
    )

async def book(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if str(update.message.from_user.id) != ADMIN_CHAT_ID:
        await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω. –¢–æ–ª—å–∫–æ —Ç—Ä–µ–Ω–µ—Ä –º–æ–∂–µ—Ç –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤.")
        return
    
    try:
        parts = update.message.text.split()
        if len(parts) != 5:
            raise ValueError()
            
        _, date, time, name, chat_id = parts
        add_booking(date, time, name, int(chat_id))
        
        try:
            await context.bot.send_message(
                chat_id=int(chat_id),
                text=f"‚úÖ –í—ã –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É {date} –≤ {time}"
            )
        except:
            pass
            
        await update.message.reply_text(f"‚úÖ –ö–ª–∏–µ–Ω—Ç {name} –∑–∞–ø–∏—Å–∞–Ω –Ω–∞ {date} –≤ {time}")
        
    except Exception as e:
        await update.message.reply_text(
            "‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"
            "/book –ì–ì–ì–ì-–ú–ú-–î–î –ß–ß:–ú–ú –ò–º—è_–∫–ª–∏–µ–Ω—Ç–∞ ChatID_–∫–ª–∏–µ–Ω—Ç–∞\n"
            "–ü—Ä–∏–º–µ—Ä: /book 2024-04-15 18:00 –ò–≤–∞–Ω 123456789"
        )

async def show_schedule(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if str(update.message.from_user.id) != ADMIN_CHAT_ID:
        await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω.")
        return
        
    bookings = get_bookings()
    if not bookings:
        await update.message.reply_text("üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—É—Å—Ç–æ.")
        return
        
    msg = "üìÖ –¢–µ–∫—É—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:\n\n"
    for b in bookings:
        msg += f"‚Ä¢ {b[1]} –≤ {b[2]} ‚Äî {b[3]}\n"
    
    await update.message.reply_text(msg)

async def delete(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if str(update.message.from_user.id) != ADMIN_CHAT_ID:
        await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω.")
        return
    
    try:
        parts = update.message.text.split()
        if len(parts) != 3:
            raise ValueError()
            
        _, date, time = parts
        
        booking = get_booking_by_datetime(date, time)
        if not booking:
            await update.message.reply_text("‚ùå –ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            return
            
        delete_booking(date, time)
        
        try:
            await context.bot.send_message(
                chat_id=booking[4],
                text=f"‚ùå –í–∞—à–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ {date} –≤ {time} –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞."
            )
        except:
            pass
            
        await update.message.reply_text(f"‚úÖ –ó–∞–ø–∏—Å—å –Ω–∞ {date} –≤ {time} —É–¥–∞–ª–µ–Ω–∞.")
        
    except:
        await update.message.reply_text(
            "‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"
            "/delete –ì–ì–ì–ì-–ú–ú-–î–î –ß–ß:–ú–ú\n"
            "–ü—Ä–∏–º–µ—Ä: /delete 2024-04-15 18:00"
        )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    help_text = (
        "ü§ñ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:\n\n"
        "üìå /start - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n"
        "üìå /book –î–ê–¢–ê –í–†–ï–ú–Ø –ò–ú–Ø CHAT_ID - –ó–∞–ø–∏—Å–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ç—Ä–µ–Ω–µ—Ä–∞)\n"
        "üìå /schedule - –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ç—Ä–µ–Ω–µ—Ä–∞)\n"
        "üìå /delete –î–ê–¢–ê –í–†–ï–ú–Ø - –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ç—Ä–µ–Ω–µ—Ä–∞)\n"
        "üìå /help - –ü–æ–º–æ—â—å"
    )
    await update.message.reply_text(help_text)

def main():
    app = Application.builder().token(TELEGRAM_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("book", book))
    app.add_handler(CommandHandler("schedule", show_schedule))
    app.add_handler(CommandHandler("delete", delete))
    app.add_handler(CommandHandler("help", help_command))

    start_scheduler()

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == '__main__':
    main()
